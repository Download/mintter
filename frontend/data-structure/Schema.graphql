
interface Section {
  hash: ID
  type: Section_Type
  timestamp: DateTime!
}

interface TextSection implements Section {
  metadata: Section_Metadata
  children: TextSection_Children
}

interface ImageSection implements Section {
  metadata: ImageSection_Metadata
  children: ImageSection_Children
}

interface VideoSection implements Section {
  metadata: VideoSection_Metadata
  children: VideoSection_Children
}

interface WebFragmentSection implements Section {
  metadata: WebFragmentSection_Metadata
  children: WebFragmentSection_Children
}

enum Section_Type {
  TEXT
  IMAGE
  VIDEO
  WEB_FRAGMENT
}

enum Image_Format {
  JPEG
  PNG
  RAW
}

enum Video_Format {
  MP4
  MOV
  MKV
  AVI
}

type Exif {
  # ...
}

enum Video_Audio_Channels {
  MONO
  STEREO
}

interface Section_Metadata {
  title: String!
  description: String
  tags: String[]!
  author: ID! | String!
  price: Float!
}

interface ImageSection_Metadata implements Section_Metadata {
  format: Image_Format
  aspectRatio: String!
  pixelDensity: String
  exif: Exif
}

interface ImageSection_Children {
  alternativeText: String!
  content: Blob!
  publicURL: String
}

interface VideoSection_Metadata implements Section_Metadata {
  format: Image_Format
  aspectRatio: String!
  videoMetadata: TODO
  duration: Int #in miliseconds
  codec: String
  audioChannels: Video_Audio_Channels
}

interface VideoSection_Children {
  alternativeText: String!
  content: Blob!
  publicURL: String
}

type WebFragmentSection_Metadata implements Section_Metadata {
  website_headers: Website_Metadata

}

type Website_Metadata {
  # ...
}

interface WebFragmentSection_Children {
  publicURL: String!
  text: String! # the text you want to show? (are we going to allow this?)
}

interface TextSection_Children {
  text: String
  bold: Boolean
  italic: Boolean
  underline: Boolean
}
