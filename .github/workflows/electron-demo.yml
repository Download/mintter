name: Electron demo

on:
  pull_request: {}
  push:
    branches:
      - master
    tags:
      - v*

jobs:
  build:
    name: Build (${{ matrix.os }})
    # if: startsWith(github.ref, 'refs/tags/')
    # needs: test
    runs-on: ${{ matrix.os }}
    strategy:
      matrix:
        os: [macos-latest, ubuntu-latest, windows-latest]
    steps:
      - name: Checkout
        uses: actions/checkout@v1
      - name: Use node 20
        uses: actions/setup-node@v1
        with:
          node-version: '20'
      - name: Yarn install
        run: yarn install-deps
    #   - name: Add MacOS certs
    #     if: matrix.os == 'macos-latest' && startsWith(github.ref, 'refs/tags/')
    #     run: chmod +x add-osx-cert.sh && ./add-osx-cert.sh
    #     env:
    #       CERTIFICATE_OSX_APPLICATION:
    #         ${{ secrets.CERTIFICATE_OSX_APPLICATION }}
    #       CERTIFICATE_PASSWORD: ${{ secrets.CERTIFICATE_PASSWORD }}
    #   - name: Add Windows certificate
    #     if:
    #       matrix.os == 'windows-latest' && startsWith(github.ref, 'refs/tags/')
    #     id: write_file
    #     uses: timheuer/base64-to-file@v1
    #     with:
    #       fileName: 'win-certificate.pfx'
    #       encodedString: ${{ secrets.CERTIFICATE_WINDOWS_PFX }}
      # - name: Setup flatpak
      #   if: matrix.os == 'ubuntu-latest' && startsWith(github.ref, 'refs/tags/')
      #   run: sudo apt install flatpak flatpak-builder elfutils
      - name: Make
        if: startsWith(github.ref, 'refs/tags/')
        run: yarn electron:make
        # env:
        #   APPLE_ID: ${{ secrets.APPLE_ID }}
        #   APPLE_ID_PASSWORD: ${{ secrets.APPLE_ID_PASSWORD }}
        #   WINDOWS_PFX_FILE: ${{ steps.write_file.outputs.filePath }}
        #   WINDOWS_PFX_PASSWORD: ${{ secrets.WINDOWS_PFX_PASSWORD }}
    #   - name: Release
    #     uses: softprops/action-gh-release@v1
    #     if: startsWith(github.ref, 'refs/tags/')
    #     env:
    #       GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
    #     with:
    #       files: |
    #         electron-app/out/**/*.deb
    #         electron-app/out/**/*.dmg
    #         electron-app/out/**/*Setup.exe
    #         electron-app/out/**/*.rpm
    #         electron-app/out/**/*.zip